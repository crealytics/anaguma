module Kusuri
    module Parser
        grammar SimpleSearch
            rule search
                space? group+ <Group> / ' '* eof <Group>
            end

            rule group
                ignored_predicates+ / or_group / and_group
            end

            rule and_group
                head:term tail:(and_predicate term !or)* <Group>
            end

            rule and_predicate
                and ignored_predicates* / space?
            end

            rule or_group
                head:term tail:(or_predicate term)+ <Group>
            end

            rule or_predicate
                or ignored_predicates*
            end

            rule ignored_predicates
                (and / or)
            end

            rule term 
                prefix:not? _field:field? _value:value <Term>
                /
                prefix:not? _field:field
            end

            rule field
                _name:[a-zA-Z\_\-]+ space? _infix:infix space? <Field>
            end

            rule infix
                content:(":" / ">=" / "<=" / ">" / "<" / "~") space?
            end

            rule value
                content:quoted space? <Value>
            end

            rule quoted
                single_quoted / double_quoted / unquoted
            end

            rule double_quoted
                '"' content:([^"\\] / "\\" . )* '"' <DoubleQuotedString>
            end

            rule single_quoted
                '\'' content:([^'\\] / "\\" . )* '\'' <SingleQuotedString>
            end

            rule unquoted
                [^ ]+ <UnquotedString>
            end

            rule or
                [Oo] [Rr] space <Predicate> / "||" space? <Predicate>
            end

            rule and
                [Aa] [Nn] [Dd] space <Predicate> / "&&" space? <Predicate>
            end

            rule not
                [Nn] [Oo] [Tt] space <Predicate> / "!" space? <Predicate>
            end

            rule space
                ' '+ / eof
            end

            rule eof
                ' '* !.
            end
        end
    end
end
